import os
import pandas as pd

# =========================
# UI TEXTS
# =========================
# SahayaSoochi Configuration File

# ================= UI TEXTS =================
UI_TEXTS = {
    "en": {
        "title": "SahayaSoochi",
        "description": "AI Letter Generator for Every Occasion",
        "input_type": "Select Input Method:",
        "input_text": "Enter your request:",
        "recording_info": "Click below to record your voice.",
        "recording_start": "üé§ Start Recording",
        "recording_status": "Listening...",
        "recording_finished": "Recording complete.",
        "transcribed": "Transcribed Text:",
        "speech_error": "Sorry, could not understand the audio.",
        "connection_error": "Connection error while processing audio.",
        "language_label": "Choose output letter language:",
        "generate_button": "Generate Letter",
        "output_title": "Generated Letter",
        "intent_detected": "Intent detected:",
        "timestamp": "Generated at:",
        "output_box": "Letter Output",
        "download_button": "Download Letter",
        "clear_history": "üóë Clear History",
        "no_history": "No letter history found."
    },
    "te": {
        "title": "‡∞∏‡∞π‡∞æ‡∞Ø‡∞∏‡±Ç‡∞ö‡∞ø",
        "description": "‡∞™‡±ç‡∞∞‡∞§‡∞ø ‡∞∏‡∞Ç‡∞¶‡∞∞‡±ç‡∞≠‡∞æ‡∞®‡∞ø‡∞ï‡∞ø ‡∞≤‡±á‡∞ñ‡∞≤‡±Å ‡∞∞‡±Ç‡∞™‡±ä‡∞Ç‡∞¶‡∞ø‡∞Ç‡∞ö‡∞Ç‡∞°‡∞ø",
        "input_type": "‡∞á‡∞®‡±ç‚Äå‡∞™‡±Å‡∞ü‡±ç ‡∞µ‡∞ø‡∞ß‡∞æ‡∞®‡∞Ç ‡∞é‡∞Ç‡∞ö‡±Å‡∞ï‡±ã‡∞Ç‡∞°‡∞ø:",
        "input_text": "‡∞Æ‡±Ä ‡∞Ö‡∞≠‡±ç‡∞Ø‡∞∞‡±ç‡∞•‡∞® ‡∞®‡∞Æ‡±ã‡∞¶‡±Å ‡∞ö‡±á‡∞Ø‡∞Ç‡∞°‡∞ø:",
        "recording_info": "‡∞Æ‡±Ä ‡∞µ‡∞æ‡∞Ø‡∞ø‡∞∏‡±ç ‡∞∞‡∞ø‡∞ï‡∞æ‡∞∞‡±ç‡∞°‡±ç ‡∞ö‡±á‡∞Ø‡∞°‡∞æ‡∞®‡∞ø‡∞ï‡∞ø ‡∞ï‡∞ø‡∞Ç‡∞¶‡∞ø ‡∞¨‡∞ü‡∞®‡±ç ‡∞ï‡±ç‡∞≤‡∞ø‡∞ï‡±ç ‡∞ö‡±á‡∞Ø‡∞Ç‡∞°‡∞ø.",
        "recording_start": "üé§ ‡∞∞‡∞ø‡∞ï‡∞æ‡∞∞‡±ç‡∞°‡∞ø‡∞Ç‡∞ó‡±ç ‡∞™‡±ç‡∞∞‡∞æ‡∞∞‡∞Ç‡∞≠‡∞ø‡∞Ç‡∞ö‡∞Ç‡∞°‡∞ø",
        "recording_status": "‡∞µ‡∞ø‡∞Ç‡∞ü‡±ã‡∞Ç‡∞¶‡∞ø...",
        "recording_finished": "‡∞∞‡∞ø‡∞ï‡∞æ‡∞∞‡±ç‡∞°‡∞ø‡∞Ç‡∞ó‡±ç ‡∞™‡±Ç‡∞∞‡±ç‡∞§‡∞Ø‡∞ø‡∞Ç‡∞¶‡∞ø.",
        "transcribed": "‡∞≤‡∞ø‡∞ñ‡∞ø‡∞§ ‡∞∞‡±Ç‡∞™‡∞Ç:",
        "speech_error": "‡∞ï‡±ç‡∞∑‡∞Æ‡∞ø‡∞Ç‡∞ö‡∞Ç‡∞°‡∞ø, ‡∞Ü‡∞°‡∞ø‡∞Ø‡±ã‡∞®‡±Å ‡∞Ö‡∞∞‡±ç‡∞•‡∞Ç ‡∞ö‡±á‡∞∏‡±Å‡∞ï‡±ã‡∞≤‡±á‡∞ï‡∞™‡±ã‡∞Ø‡∞æ‡∞®‡±Å.",
        "connection_error": "‡∞Ü‡∞°‡∞ø‡∞Ø‡±ã ‡∞™‡±ç‡∞∞‡∞æ‡∞∏‡±Ü‡∞∏‡±ç ‡∞ö‡±á‡∞∏‡±ç‡∞§‡±Å‡∞Ç‡∞°‡∞ó‡∞æ ‡∞ï‡∞®‡±Ü‡∞ï‡±ç‡∞∑‡∞®‡±ç ‡∞≤‡±ã‡∞™‡∞Ç.",
        "language_label": "‡∞≤‡±á‡∞ñ ‡∞≠‡∞æ‡∞∑‡∞®‡±Å ‡∞é‡∞Ç‡∞ö‡±Å‡∞ï‡±ã‡∞Ç‡∞°‡∞ø:",
        "generate_button": "‡∞≤‡±á‡∞ñ ‡∞∏‡±É‡∞∑‡±ç‡∞ü‡∞ø‡∞Ç‡∞ö‡∞Ç‡∞°‡∞ø",
        "output_title": "‡∞∏‡±É‡∞∑‡±ç‡∞ü‡∞ø‡∞Ç‡∞ö‡∞ø‡∞® ‡∞≤‡±á‡∞ñ",
        "intent_detected": "‡∞ó‡±Å‡∞∞‡±ç‡∞§‡∞ø‡∞Ç‡∞ö‡∞ø‡∞® ‡∞â‡∞¶‡±ç‡∞¶‡±á‡∞∂‡±ç‡∞Ø‡∞Ç:",
        "timestamp": "‡∞∏‡±É‡∞∑‡±ç‡∞ü‡∞ø‡∞Ç‡∞ö‡∞ø‡∞® ‡∞∏‡∞Æ‡∞Ø‡∞Ç:",
        "output_box": "‡∞≤‡±á‡∞ñ ‡∞Ö‡∞µ‡±Å‡∞ü‡±ç‚Äå‡∞™‡±Å‡∞ü‡±ç",
        "download_button": "‡∞≤‡±á‡∞ñ ‡∞°‡±å‡∞®‡±ç‚Äå‡∞≤‡±ã‡∞°‡±ç ‡∞ö‡±á‡∞Ø‡∞Ç‡∞°‡∞ø",
        "clear_history": "üóë ‡∞ö‡∞∞‡∞ø‡∞§‡±ç‡∞∞‡∞®‡±Å ‡∞ï‡±ç‡∞≤‡∞ø‡∞Ø‡∞∞‡±ç ‡∞ö‡±á‡∞Ø‡∞Ç‡∞°‡∞ø",
        "no_history": "‡∞≤‡±á‡∞ñ ‡∞ö‡∞∞‡∞ø‡∞§‡±ç‡∞∞ ‡∞≤‡∞≠‡∞ø‡∞Ç‡∞ö‡∞≤‡±á‡∞¶‡±Å."
    }
}

# ================= App Settings =================
APP_NAME = "SahayaSoochi"
APP_VERSION = "1.0.0"
APP_DESCRIPTION = "AI Letter Generator for Government Applications"

# ================= Audio Recording Settings =================
RECORDING_DURATION = 5  # seconds
SAMPLE_RATE = 44100
CHANNELS = 1

# ================= File Paths =================
CORPUS_FILE = "corpus.csv"
HISTORY_FILE = "letter_history.json"
AUDIO_FILE = "input.wav"

# ================= Supported Languages =================
SUPPORTED_LANGUAGES = {
    "en": "English",
    "te": "‡∞§‡±Ü‡∞≤‡±Å‡∞ó‡±Å"
}

# ================= Helper Functions =================
import json
import os

def load_letter_history():
    if os.path.exists(HISTORY_FILE):
        with open(HISTORY_FILE, "r", encoding="utf-8") as f:
            return json.load(f)
    return []

def save_letter_history(letter_data):
    history = load_letter_history()
    history.append(letter_data)
    with open(HISTORY_FILE, "w", encoding="utf-8") as f:
        json.dump(history, f, ensure_ascii=False, indent=2)

def clear_letter_history():
    if os.path.exists(HISTORY_FILE):
        os.remove(HISTORY_FILE)

def save_to_corpus(user_input, intent, source, letter):
    import csv
    exists = os.path.exists(CORPUS_FILE)
    with open(CORPUS_FILE, "a", newline="", encoding="utf-8") as csvfile:
        writer = csv.writer(csvfile)
        if not exists:
            writer.writerow(["input", "intent", "source", "letter"])
        writer.writerow([user_input, intent, source, letter])

def detect_intent(user_input):
    user_input_lower = user_input.lower()
    if "birth" in user_input_lower:
        return "birth_certificate"
    elif "ration" in user_input_lower:
        return "ration_card"
    elif "income" in user_input_lower:
        return "income_certificate"
    elif "caste" in user_input_lower:
        return "caste_certificate"
    elif "residence" in user_input_lower:
        return "residence_certificate"
    elif "tax" in user_input_lower:
        return "tax_exemption"
    else:
        return "general"
